# Tox configuration file
# Read more under https://tox.readthedocs.org/

[main]
line_len = 100
src_dir =
    denseclus

[tox]
isolated_build = True
minversion = 4
envlist = py310
requires = tox>=4
skipdist = False

[testenv]
deps =
    pytest
    pytest-cov
    coverage
    mypy

description = invoke pytest to run automated tests
;install_command = pip install {opts} {packages}
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
extras =
    testing
commands =
    pytest {posargs}
    mypy {[main]src_dir}
    coverage run --include={[main]src_dir}/* -m pytest -ra
    coverage report -m


[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,doctests}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
   DOCSDIR = {toxinidir}/docs
   BUILDDIR = {toxinidir}/docs/_build
   docs: BUILD = html
   doctests: BUILD = doctest
deps =
   -r {toxinidir}/requirements.txt
allowlist_externals = sphinx-build, jupyter
commands =
   jupyter nbconvert --to rst --output-dir=docs/rst notebooks/*.ipynb
   sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository pypi} dist/*


[pytest]
addopts =
    -v
filterwarnings =
# https://github.com/boto/boto3/issues/1968
    ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated


[testenv:lint]
deps = ruff
commands = ruff --max-complexity=20 --exclude=build/, .git, __pycache__, .*_cache, examples/, .tox, data/, venv/, .venv/ --ignore=E203,W503,E722,E231 {[main]src_dir}

[testenv:pytest]
deps =
    -r requirements.txt
    -r requirements-dev.txt
commands =
    pytest tests/

[gh-actions]
python =
    3.10: py310


[testenv:mypy]
deps =
    mypy
commands =
    mypy --config-file tox.ini {[main]src_dir}
ignore_missing_imports = True
files = {[main]src_dir}/*.py

[mypy]
ignore_missing_imports = True
files = {[main]src_dir}/*.py
