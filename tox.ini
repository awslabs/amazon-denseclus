# Tox configuration file
# Read more under https://tox.readthedocs.org/

[main]
line_len = 88
src_dir =
    notebooks
    denseclus

[tox]
isolated_build = True
minversion = 3.15
envlist = py37


[testenv]
deps =
    pytest
    black
    coverage
    flake8
    mccabe
    mypy
    pylint
    pytest
description = invoke pytest to run automated tests
;install_command = pip install {opts} {packages}
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
extras =
    testing
commands =
    pytest {posargs}
    black denseclus
    flake8 denseclus --max-line-length=90
    pylint --fail-under=7 denseclus
;    mypy denseclus
    coverage erase
    coverage run --include=denseclus/* -m pytest -ra
    coverage report -m


[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,doctests}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
deps =
    -r {toxinidir}/docs/requirements.txt
# ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository pypi} dist/*

[flake8]
max-complexity = 20
exclude =
    build/
    .git
    __pycache__
    .*_cache
    examples/
    .tox
    data/
    venv/
    .venv/
ignore = E203, W503, E722, E231

[isort]
atomic = True
profile = black

[mypy]
ignore_missing_imports = True
files = **/*.py

[pytest]
addopts =
    -v
filterwarnings =
# https://github.com/boto/boto3/issues/1968
    ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated

[testenv:flake8]
description = check flake8 formatting for CI
deps =
    flake8
commands =
    flake8 --max-line-length {[main]line_len} {[main]src_dir}

[testenv:isort-check]
description = check isort formatting for CI
deps = isort
commands =
    isort --line-length {[main]line_len} --check {[main]src_dir}

[testenv:black-check]
description = check black formatting for CI
deps = black==19.10b0
commands =
    black -l {[main]line_len} --check {[main]src_dir}

[testenv:mypy]
deps =
    mypy
commands =
    mypy --config-file tox.ini {[main]src_dir}


[testenv:pytest]
deps =
    -r requirements.txt
commands =
    pytest tests/

[gh-actions]
python =
    3.7: py37
